/* Generated By:JavaCC: Do not edit this line. HtmlLexerTokenManager.java */
package edu.stanford.nlp.annotation;
import java.util.StringTokenizer;

public class HtmlLexerTokenManager implements HtmlLexerConstants
{
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjMoveStringLiteralDfa0_2()
{
   return jjMoveNfa_2(23, 0);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_2(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 26;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 23:
                  if ((0xefffffffffffffffL & l) != 0L)
                  {
                     if (kind > 7)
                        kind = 7;
                     jjCheckNAdd(24);
                  }
                  else if (curChar == 60)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 0:
                  if (curChar == 47)
                     jjAddStates(0, 1);
                  break;
               case 7:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(2, 3);
                  break;
               case 8:
                  if (curChar == 62 && kind > 6)
                     kind = 6;
                  break;
               case 24:
                  if ((0xefffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAdd(24);
                  break;
               case 25:
                  if (curChar == 60 && kind > 7)
                     kind = 7;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 23:
               case 24:
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAdd(24);
                  break;
               case 1:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 3:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 4:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 5:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 6:
                  if ((0x10000000100000L & l) != 0L)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               case 9:
                  if ((0x8000000080000L & l) != 0L)
                     jjAddStates(4, 6);
                  break;
               case 10:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 11:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 12:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if ((0x1000000010000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 14:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 16:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 17:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x4000000040000L & l) != 0L)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               case 19:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 22:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 23:
               case 24:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAdd(24);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 26 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x2L) != 0L)
         {
            jjmatchedKind = 9;
            jjmatchedPos = 0;
            return 235;
         }
         return -1;
      case 1:
         if ((active0 & 0x2L) != 0L)
         {
            jjmatchedKind = 9;
            jjmatchedPos = 1;
            return 330;
         }
         return -1;
      case 2:
         if ((active0 & 0x2L) != 0L)
         {
            jjmatchedKind = 9;
            jjmatchedPos = 2;
            return 330;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 60:
         return jjMoveStringLiteralDfa1_0(0x2L);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x2L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x2L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(3, 1, 330);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 330;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 330:
                  if ((0xafffff7bffffffffL & l) != 0L)
                  {
                     if (kind > 9)
                        kind = 9;
                     jjCheckNAddStates(7, 9);
                  }
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(257, 258);
                  else if (curChar == 39)
                     jjCheckNAddTwoStates(254, 255);
                  else if (curChar == 62)
                  {
                     if (kind > 8)
                        kind = 8;
                  }
                  if ((0xafffff7bffffffffL & l) != 0L)
                     jjCheckNAddStates(10, 13);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(249, 250);
                  else if (curChar == 39)
                     jjCheckNAddTwoStates(246, 247);
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 17)
                        kind = 17;
                     jjCheckNAddStates(14, 24);
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 27)
                        kind = 27;
                     jjCheckNAdd(43);
                  }
                  else if ((0x201000000000L & l) != 0L)
                     jjCheckNAdd(37);
                  else if (curChar == 46)
                  {
                     if (kind > 28)
                        kind = 28;
                     jjCheckNAddStates(25, 28);
                  }
                  else if (curChar == 60)
                  {
                     if (kind > 9)
                        kind = 9;
                     jjCheckNAddStates(29, 37);
                  }
                  else if (curChar == 38)
                     jjCheckNAddTwoStates(1, 4);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAddStates(38, 51);
                  }
                  else if (curChar == 45)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  else if (curChar == 36)
                     jjCheckNAddStates(52, 54);
                  if ((0x3fe000000000000L & l) != 0L)
                  {
                     if (kind > 16)
                        kind = 16;
                     jjCheckNAddStates(55, 63);
                  }
                  else if (curChar == 45)
                     jjCheckNAddStates(64, 66);
                  break;
               case 235:
                  if ((0xafffff7bffffffffL & l) != 0L)
                  {
                     if (kind > 9)
                        kind = 9;
                     jjCheckNAddStates(7, 9);
                  }
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(257, 258);
                  else if (curChar == 39)
                     jjCheckNAddTwoStates(254, 255);
                  else if (curChar == 62)
                  {
                     if (kind > 8)
                        kind = 8;
                  }
                  if ((0xafffff7bffffffffL & l) != 0L)
                     jjCheckNAddStates(10, 13);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(249, 250);
                  else if (curChar == 39)
                     jjCheckNAddTwoStates(246, 247);
                  break;
               case 1:
                  if (curChar == 35)
                     jjCheckNAdd(2);
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(2, 3);
                  break;
               case 3:
                  if (curChar == 59 && kind > 4)
                     kind = 4;
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(4, 3);
                  break;
               case 6:
               case 7:
                  if (curChar == 46 && kind > 15)
                     kind = 15;
                  break;
               case 11:
                  if (curChar == 45)
                     jjCheckNAddStates(64, 66);
                  break;
               case 12:
                  if (curChar == 46)
                     jjCheckNAdd(13);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddTwoStates(13, 14);
                  break;
               case 14:
                  if (curChar == 37 && kind > 18)
                     kind = 18;
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(67, 70);
                  break;
               case 16:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(71, 75);
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(76, 78);
                  break;
               case 18:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
               case 23:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(17);
                  break;
               case 21:
                  if (curChar == 46)
                     jjCheckNAdd(22);
                  break;
               case 22:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddTwoStates(22, 14);
                  break;
               case 24:
                  if (curChar == 36)
                     jjCheckNAddStates(52, 54);
                  break;
               case 25:
                  if (curChar == 46)
                     jjCheckNAdd(26);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAdd(26);
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAddStates(79, 81);
                  break;
               case 28:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAddStates(82, 85);
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAddTwoStates(30, 33);
                  break;
               case 30:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 32:
               case 35:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(29);
                  break;
               case 33:
                  if (curChar == 46)
                     jjCheckNAdd(34);
                  break;
               case 34:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAdd(34);
                  break;
               case 36:
                  if ((0x201000000000L & l) != 0L)
                     jjCheckNAdd(37);
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(37, 38);
                  break;
               case 38:
                  if (curChar == 44)
                     jjCheckNAdd(39);
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 20)
                     kind = 20;
                  jjCheckNAddTwoStates(39, 40);
                  break;
               case 40:
                  if (curChar == 37 && kind > 20)
                     kind = 20;
                  break;
               case 42:
                  if (curChar == 45 && kind > 26)
                     kind = 26;
                  break;
               case 43:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAdd(43);
                  break;
               case 234:
                  if (curChar != 60)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAddStates(29, 37);
                  break;
               case 241:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(86, 88);
                  break;
               case 242:
                  if ((0xbfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(242, 243);
                  break;
               case 243:
                  if (curChar == 62 && kind > 5)
                     kind = 5;
                  break;
               case 244:
                  if ((0xafffff7bffffffffL & l) != 0L)
                     jjCheckNAddStates(10, 13);
                  break;
               case 245:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(246, 247);
                  break;
               case 246:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(246, 247);
                  break;
               case 247:
                  if (curChar == 39)
                     jjCheckNAddStates(10, 13);
                  break;
               case 248:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(249, 250);
                  break;
               case 249:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(249, 250);
                  break;
               case 250:
                  if (curChar == 34)
                     jjCheckNAddStates(10, 13);
                  break;
               case 251:
                  if (curChar == 62 && kind > 8)
                     kind = 8;
                  break;
               case 252:
                  if ((0xafffff7bffffffffL & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAddStates(7, 9);
                  break;
               case 253:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(254, 255);
                  break;
               case 254:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(254, 255);
                  break;
               case 255:
                  if (curChar != 39)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAddStates(7, 9);
                  break;
               case 256:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(257, 258);
                  break;
               case 257:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(257, 258);
                  break;
               case 258:
                  if (curChar != 34)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAddStates(7, 9);
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAddStates(38, 51);
                  break;
               case 274:
                  if (curChar == 45)
                     jjCheckNAdd(275);
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAddTwoStates(274, 275);
                  break;
               case 276:
                  if (curChar == 45)
                     jjCheckNAdd(277);
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(89, 91);
                  break;
               case 278:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 279:
               case 281:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAddTwoStates(280, 281);
                  break;
               case 280:
                  if (curChar == 45)
                     jjCheckNAdd(281);
                  break;
               case 282:
                  if (curChar == 45)
                     jjCheckNAdd(283);
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(92, 94);
                  break;
               case 285:
               case 287:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 14)
                     kind = 14;
                  jjCheckNAddStates(95, 97);
                  break;
               case 286:
                  if (curChar == 45)
                     jjCheckNAdd(287);
                  break;
               case 288:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 289:
               case 291:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 14)
                     kind = 14;
                  jjCheckNAddStates(98, 100);
                  break;
               case 290:
                  if (curChar == 45)
                     jjCheckNAdd(291);
                  break;
               case 292:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(101, 103);
                  break;
               case 294:
                  if (curChar == 46)
                     jjCheckNAdd(295);
                  break;
               case 295:
               case 297:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(104, 106);
                  break;
               case 296:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(107, 113);
                  break;
               case 299:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(114, 117);
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(118, 122);
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(123, 126);
                  break;
               case 302:
                  if (curChar == 45)
                     jjCheckNAdd(303);
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(127, 129);
                  break;
               case 304:
                  if (curChar == 46)
                     jjCheckNAdd(305);
                  break;
               case 305:
               case 307:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(130, 132);
                  break;
               case 306:
                  if (curChar == 45)
                     jjCheckNAdd(307);
                  break;
               case 308:
                  if (curChar != 46)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAdd(305);
                  break;
               case 309:
                  if (curChar != 46)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(25, 28);
                  break;
               case 310:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  jjCheckNAdd(310);
                  break;
               case 311:
                  if (curChar != 46)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAdd(311);
                  break;
               case 312:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  jjCheckNAddStates(14, 24);
                  break;
               case 313:
                  if (curChar == 46)
                     jjCheckNAdd(310);
                  break;
               case 314:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(315);
                  break;
               case 315:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 316:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 318:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 319:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 320:
                  if ((0x3ff000000000000L & l) != 0L && kind > 21)
                     kind = 21;
                  break;
               case 321:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  jjCheckNAddStates(133, 135);
                  break;
               case 322:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  jjCheckNAddStates(55, 63);
                  break;
               case 323:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  jjCheckNAddTwoStates(324, 327);
                  break;
               case 324:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 325:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 326:
               case 329:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(323);
                  break;
               case 327:
                  if (curChar == 46)
                     jjCheckNAdd(328);
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  jjCheckNAdd(328);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 330:
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAddStates(7, 9);
                  jjCheckNAddStates(10, 13);
                  break;
               case 0:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAddStates(38, 51);
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 23)
                        kind = 23;
                  }
                  if ((0x7fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 6;
                  if (curChar == 66)
                     jjAddStates(136, 137);
                  else if (curChar == 82)
                     jjAddStates(138, 141);
                  else if (curChar == 74)
                     jjAddStates(142, 145);
                  else if (curChar == 83)
                     jjAddStates(146, 151);
                  else if (curChar == 65)
                     jjAddStates(152, 160);
                  else if (curChar == 67)
                     jjAddStates(161, 167);
                  else if (curChar == 68)
                     jjAddStates(168, 171);
                  else if (curChar == 70)
                     jjAddStates(172, 175);
                  else if (curChar == 71)
                     jjAddStates(176, 178);
                  else if (curChar == 73)
                     jjAddStates(179, 181);
                  else if (curChar == 75)
                     jjAddStates(182, 183);
                  else if (curChar == 76)
                     jjAddStates(184, 187);
                  else if (curChar == 77)
                     jjAddStates(188, 200);
                  else if (curChar == 78)
                     jjAddStates(201, 203);
                  else if (curChar == 79)
                     jjAddStates(204, 206);
                  else if (curChar == 80)
                     jjAddStates(207, 208);
                  else if (curChar == 84)
                     jjAddStates(209, 213);
                  else if (curChar == 86)
                     jjAddStates(214, 215);
                  else if (curChar == 87)
                     jjAddStates(216, 219);
                  else if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 235:
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAddStates(7, 9);
                  jjCheckNAddStates(10, 13);
                  if ((0x8000000080000L & l) != 0L)
                     jjAddStates(220, 222);
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 4:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjAddStates(223, 224);
                  break;
               case 5:
                  if ((0x7fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 113)
                     jjCheckNAdd(7);
                  break;
               case 9:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 41:
                  if ((0x7fffffe07fffffeL & l) != 0L && kind > 23)
                     kind = 23;
                  break;
               case 42:
                  if (curChar == 95 && kind > 26)
                     kind = 26;
                  break;
               case 44:
                  if (curChar == 87)
                     jjAddStates(216, 219);
                  break;
               case 45:
               case 96:
               case 161:
               case 176:
                  if (curChar == 111)
                     jjCheckNAdd(7);
                  break;
               case 46:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
               case 63:
               case 69:
               case 97:
               case 106:
               case 115:
               case 116:
               case 231:
                  if (curChar == 115)
                     jjCheckNAdd(7);
                  break;
               case 48:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
               case 103:
                  if (curChar == 104)
                     jjCheckNAdd(7);
                  break;
               case 50:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
               case 109:
               case 122:
               case 130:
               case 222:
               case 228:
                  if (curChar == 100)
                     jjCheckNAdd(7);
                  break;
               case 53:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 86)
                     jjAddStates(214, 215);
                  break;
               case 55:
               case 73:
               case 80:
               case 120:
               case 137:
               case 143:
               case 183:
                  if (curChar == 97)
                     jjCheckNAdd(7);
                  break;
               case 56:
               case 83:
               case 93:
               case 114:
               case 124:
               case 149:
               case 170:
               case 189:
               case 197:
               case 203:
               case 205:
               case 208:
                  if (curChar == 116)
                     jjCheckNAdd(7);
                  break;
               case 57:
                  if (curChar == 84)
                     jjAddStates(209, 213);
                  break;
               case 58:
               case 100:
               case 110:
               case 121:
               case 127:
               case 138:
               case 158:
               case 201:
               case 210:
               case 215:
               case 217:
                  if (curChar == 110)
                     jjCheckNAdd(7);
                  break;
               case 59:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 117)
                     jjCheckNAdd(7);
                  break;
               case 62:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 64:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
               case 78:
               case 191:
                  if (curChar == 101)
                     jjCheckNAdd(7);
                  break;
               case 68:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 70:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 80)
                     jjAddStates(207, 208);
                  break;
               case 74:
               case 164:
                  if (curChar == 102)
                     jjCheckNAdd(7);
                  break;
               case 75:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if (curChar == 79)
                     jjAddStates(204, 206);
                  break;
               case 79:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 81:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 82:
                  if (curChar == 107)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 84:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if (curChar == 78)
                     jjAddStates(201, 203);
                  break;
               case 86:
               case 90:
               case 140:
               case 223:
                  if (curChar == 118)
                     jjCheckNAdd(7);
                  break;
               case 87:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
               case 147:
                  if (curChar == 98)
                     jjCheckNAdd(7);
                  break;
               case 89:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 91:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if (curChar == 77)
                     jjAddStates(188, 200);
                  break;
               case 94:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 98:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 101:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 104:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 107:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 111:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
               case 118:
               case 155:
               case 156:
               case 168:
               case 187:
               case 209:
               case 219:
                  if (curChar == 114)
                     jjCheckNAdd(7);
                  break;
               case 113:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 117:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 119:
                  if (curChar == 76)
                     jjAddStates(184, 187);
                  break;
               case 123:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 125:
                  if (curChar == 75)
                     jjAddStates(182, 183);
                  break;
               case 126:
                  if (curChar == 121)
                     jjCheckNAdd(7);
                  break;
               case 128:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 73)
                     jjAddStates(179, 181);
                  break;
               case 131:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
               case 151:
               case 213:
                  if (curChar == 108)
                     jjCheckNAdd(7);
                  break;
               case 133:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
               case 153:
               case 193:
                  if (curChar == 99)
                     jjCheckNAdd(7);
                  break;
               case 135:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 71)
                     jjAddStates(176, 178);
                  break;
               case 139:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 141:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if (curChar == 70)
                     jjAddStates(172, 175);
                  break;
               case 144:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if (curChar == 105)
                     jjCheckNAdd(7);
                  break;
               case 146:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 148:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 150:
                  if (curChar == 68)
                     jjAddStates(168, 171);
                  break;
               case 152:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 154:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 157:
                  if (curChar == 67)
                     jjAddStates(161, 167);
                  break;
               case 159:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 162:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 165:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 169:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 171:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
               case 225:
                  if (curChar == 112)
                     jjCheckNAdd(7);
                  break;
               case 174:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 177:
                  if (curChar == 65)
                     jjAddStates(152, 160);
                  break;
               case 178:
                  if (curChar == 107)
                     jjCheckNAdd(7);
                  break;
               case 179:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 122)
                     jjCheckNAdd(7);
                  break;
               case 181:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 184:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if (curChar == 103)
                     jjCheckNAdd(7);
                  break;
               case 186:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 188:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 190:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 192:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 194:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 198:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if (curChar == 83)
                     jjAddStates(146, 151);
                  break;
               case 202:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 204:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 206:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 211:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if (curChar == 74)
                     jjAddStates(142, 145);
                  break;
               case 214:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 216:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 218:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 220:
                  if (curChar == 82)
                     jjAddStates(138, 141);
                  break;
               case 221:
                  if (curChar == 109)
                     jjCheckNAdd(7);
                  break;
               case 224:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 226:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if (curChar == 66)
                     jjAddStates(136, 137);
                  break;
               case 229:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 232:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 236:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 237:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 238:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 239:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(240);
                  break;
               case 240:
                  if ((0x10000000100000L & l) != 0L)
                     jjCheckNAddTwoStates(241, 243);
                  break;
               case 242:
                  jjCheckNAddTwoStates(242, 243);
                  break;
               case 244:
                  jjCheckNAddStates(10, 13);
                  break;
               case 246:
                  jjAddStates(225, 226);
                  break;
               case 249:
                  jjAddStates(227, 228);
                  break;
               case 252:
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAddStates(7, 9);
                  break;
               case 254:
                  jjAddStates(229, 230);
                  break;
               case 257:
                  jjAddStates(231, 232);
                  break;
               case 259:
                  if ((0x8000000080000L & l) != 0L)
                     jjAddStates(220, 222);
                  break;
               case 260:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 261:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 262:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 263:
                  if ((0x1000000010000L & l) != 0L)
                     jjCheckNAdd(240);
                  break;
               case 264:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 265:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 266:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 267:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 268:
                  if ((0x4000000040000L & l) != 0L)
                     jjCheckNAddTwoStates(241, 243);
                  break;
               case 269:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 270:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 271:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 272:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAddTwoStates(241, 243);
                  break;
               case 273:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAddStates(38, 51);
                  break;
               case 274:
                  if (curChar == 95)
                     jjCheckNAdd(275);
                  break;
               case 275:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAddTwoStates(274, 275);
                  break;
               case 276:
                  if (curChar == 95)
                     jjCheckNAdd(277);
                  break;
               case 277:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(89, 91);
                  break;
               case 279:
               case 281:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAddTwoStates(280, 281);
                  break;
               case 280:
                  if (curChar == 95)
                     jjCheckNAdd(281);
                  break;
               case 282:
                  if (curChar == 95)
                     jjCheckNAdd(283);
                  break;
               case 283:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(92, 94);
                  break;
               case 284:
                  if (curChar == 64)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 285:
               case 287:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 14)
                     kind = 14;
                  jjCheckNAddStates(95, 97);
                  break;
               case 286:
                  if (curChar == 95)
                     jjCheckNAdd(287);
                  break;
               case 289:
               case 291:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 14)
                     kind = 14;
                  jjCheckNAddStates(98, 100);
                  break;
               case 290:
                  if (curChar == 95)
                     jjCheckNAdd(291);
                  break;
               case 292:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 293:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(101, 103);
                  break;
               case 295:
               case 297:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(104, 106);
                  break;
               case 296:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 298:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(107, 113);
                  break;
               case 299:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(114, 117);
                  break;
               case 300:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(118, 122);
                  break;
               case 301:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(123, 126);
                  break;
               case 302:
                  if (curChar == 95)
                     jjCheckNAdd(303);
                  break;
               case 303:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(127, 129);
                  break;
               case 305:
               case 307:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(130, 132);
                  break;
               case 306:
                  if (curChar == 95)
                     jjCheckNAdd(307);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 330:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(10, 13);
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 9)
                        kind = 9;
                     jjCheckNAddStates(7, 9);
                  }
                  break;
               case 235:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(10, 13);
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 9)
                        kind = 9;
                     jjCheckNAddStates(7, 9);
                  }
                  break;
               case 242:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(233, 234);
                  break;
               case 244:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(10, 13);
                  break;
               case 246:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(225, 226);
                  break;
               case 249:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(227, 228);
                  break;
               case 252:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAddStates(7, 9);
                  break;
               case 254:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(229, 230);
                  break;
               case 257:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(231, 232);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 330 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjMoveStringLiteralDfa0_3()
{
   return jjMoveNfa_3(0, 0);
}
private final int jjMoveNfa_3(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 7;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xafffff7bffffffffL & l) != 0L)
                  {
                     if (kind > 10)
                        kind = 10;
                  }
                  else if (curChar == 39)
                     jjCheckNAddTwoStates(5, 6);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(2, 3);
                  break;
               case 1:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(2, 3);
                  break;
               case 2:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(2, 3);
                  break;
               case 3:
                  if (curChar == 34 && kind > 11)
                     kind = 11;
                  break;
               case 4:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(5, 6);
                  break;
               case 5:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(5, 6);
                  break;
               case 6:
                  if (curChar == 39 && kind > 11)
                     kind = 11;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (kind > 10)
                     kind = 10;
                  break;
               case 2:
                  jjAddStates(235, 236);
                  break;
               case 5:
                  jjAddStates(237, 238);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 10)
                     kind = 10;
                  break;
               case 2:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(235, 236);
                  break;
               case 5:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(237, 238);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 7 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x4L) != 0L)
         {
            jjmatchedKind = 3;
            return -1;
         }
         return -1;
      case 1:
         if ((active0 & 0x4L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 3;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private final int jjStartNfaWithStates_1(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_1(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa1_1(0x4L);
      default :
         return jjMoveNfa_1(1, 0);
   }
}
private final int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa2_1(active0, 0x4L);
      default :
         break;
   }
   return jjStartNfa_1(0, active0);
}
private final int jjMoveStringLiteralDfa2_1(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(2, 2);
         break;
      default :
         break;
   }
   return jjStartNfa_1(1, active0);
}
private final int jjMoveNfa_1(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 2;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0xffffdfffffffffffL & l) != 0L)
                  {
                     if (kind > 3)
                        kind = 3;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 45)
                  {
                     if (kind > 3)
                        kind = 3;
                  }
                  break;
               case 0:
                  if ((0xffffdfffffffffffL & l) == 0L)
                     break;
                  kind = 3;
                  jjCheckNAdd(0);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  kind = 3;
                  jjCheckNAdd(0);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAdd(0);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   1, 9, 7, 8, 10, 14, 19, 252, 253, 256, 244, 245, 248, 251, 313, 310, 
   12, 13, 14, 37, 38, 314, 315, 15, 321, 295, 310, 13, 311, 235, 244, 245, 
   248, 251, 252, 253, 256, 259, 274, 276, 278, 282, 284, 292, 294, 302, 304, 303, 
   300, 283, 277, 275, 25, 27, 28, 323, 329, 324, 327, 17, 23, 18, 21, 14, 
   12, 15, 16, 12, 13, 14, 15, 17, 23, 18, 21, 14, 18, 21, 14, 25, 
   26, 27, 29, 35, 30, 33, 241, 242, 243, 276, 278, 277, 282, 284, 283, 286, 
   288, 287, 288, 290, 291, 292, 294, 300, 294, 296, 298, 292, 294, 296, 298, 299, 
   298, 300, 294, 296, 298, 299, 292, 294, 300, 301, 300, 292, 294, 300, 301, 302, 
   304, 303, 306, 308, 307, 313, 310, 321, 230, 233, 221, 222, 224, 226, 214, 216, 
   218, 219, 202, 204, 207, 208, 209, 211, 179, 182, 184, 186, 188, 190, 192, 196, 
   199, 160, 163, 167, 169, 172, 175, 176, 152, 154, 155, 156, 144, 146, 148, 149, 
   137, 139, 141, 131, 133, 135, 126, 128, 120, 121, 123, 124, 95, 96, 99, 102, 
   105, 108, 109, 111, 113, 114, 115, 117, 118, 87, 89, 91, 79, 82, 84, 73, 
   76, 60, 62, 66, 68, 71, 55, 56, 46, 48, 51, 53, 260, 264, 269, 4, 
   3, 246, 247, 249, 250, 254, 255, 257, 258, 242, 243, 2, 3, 5, 6, 
};
public static final String[] jjstrLiteralImages = {
"", "\74\41\55\55", "\55\55\76", null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, };
public static final String[] lexStateNames = {
   "DEFAULT", 
   "COMMENT_BODY", 
   "CODE", 
   "TAG_NO_RETURN", 
};
public static final int[] jjnewLexState = {
   -1, 1, 0, -1, -1, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, 
};
private SimpleCharStream input_stream;
private final int[] jjrounds = new int[330];
private final int[] jjstateSet = new int[660];
StringBuffer image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public HtmlLexerTokenManager(SimpleCharStream stream)
{
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public HtmlLexerTokenManager(SimpleCharStream stream, int lexState)
{
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 330; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 4 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

private final Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   if (jjmatchedPos < 0)
   {
      t.image = "";
      t.beginLine = t.endLine = input_stream.getBeginLine();
      t.beginColumn = t.endColumn = input_stream.getBeginColumn();
   }
   else
   {
      String im = jjstrLiteralImages[jjmatchedKind];
      t.image = (im == null) ? input_stream.GetImage() : im;
      t.beginLine = input_stream.getBeginLine();
      t.beginColumn = input_stream.getBeginColumn();
      t.endLine = input_stream.getEndLine();
      t.endColumn = input_stream.getEndColumn();
   }
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public final Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 15;
       jjmatchedPos = -1;
       curPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       if (jjmatchedPos < 0 || (jjmatchedPos == 0 && jjmatchedKind > 29))
       {
          jjmatchedKind = 29;
          jjmatchedPos = 0;
       }
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
     case 2:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       break;
     case 3:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_3();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

final void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 20 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
        String temp = matchedToken.image;
        StringTokenizer s = new StringTokenizer(temp, ",");
        try {
           String str = s.nextToken();
           matchedToken.image = str;
           matchedToken.kind = WORD;
           matchedToken.endColumn = matchedToken.beginColumn + str.length() -1;

           str = s.nextToken();
           Token t = new Token();
           t.image = str;
           t.next = matchedToken.next;
           t.kind = WORD;
           t.beginLine = matchedToken.beginLine;
           t.beginColumn = matchedToken.endColumn+2;  //for the comma
           t.endLine = matchedToken.endLine;
           t.endColumn = matchedToken.endColumn + 1 + str.length();
           matchedToken.next = t;

           t = new Token();
           t.image = ",";
           t.next = matchedToken.next;
           t.kind = ANY;
           t.beginLine = matchedToken.beginLine;
           t.beginColumn = matchedToken.endColumn + 1;
           t.endLine = matchedToken.endLine;
           t.endColumn = matchedToken.endColumn + 1;
           matchedToken.next = t;
        } catch (Exception e) {}
         break;
      default : 
         break;
   }
}
}
